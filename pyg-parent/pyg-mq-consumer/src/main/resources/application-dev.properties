
###### ============================== Dubbo 配置========================== #####
# ## Dubbo 服务名称  ==> java.lang.reflect.InvocationTargetException: null 没有这项配置会报错，无法注册到zookeeper
dubbo.application.name=mq-consumer
# Dubbo 扫描包的路径
dubbo.scan.basePackages=com.pyg.mq.consumer
# Dubbo 注册id
dubbo.registry.id=mq-consumer
# Dubbo 服务端口号
dubbo.protocol.port=29162
# Dubbo 注册中心地址
dubbo.registry.address=zookeeper://127.0.0.1:2181
## Dubbo 超时时间设置
dubbo.consumer.timeout=5000
## Dubbo 服务是否注册到注册中心
dubbo.registry.register=true


###### ============================== mybatis 配置========================== #####
# mybatisp配置文件路径
mybatis.config-location=classpath:mybatis/mybatis-config.xml
# mybatis映射的xml路径
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml


###### ============================== mysql 配置========================== #####
###控制台打印sql
spring.jpa.show-sql=true

###数据库配置
###数据库地址
spring.datasource.url=jdbc:mysql://localhost:3306/pyg?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&characterEncoding=utf8&useSSL=false
###数据库用户名
spring.datasource.username=root
###数据库密码
spring.datasource.password=root
###数据库驱动
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


###### ============================== 连接池配置========================== #####
##使用druid的话 需要多配置一个属性spring.datasource.type
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
## 初始化大小，最小，最大
spring.datasource.initialSize=50
spring.datasource.minIdle=50
spring.datasource.maxActive=100
## 配置获取连接等待超时的时间
spring.datasource.maxWait=6000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 测试连接是否有效的sql
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，检测连接是否有效
spring.datasource.testWhileIdle=true
# 申请连接时,检测连接是否有效
spring.datasource.testOnBorrow=false
# 归还连接时,检测连接是否有效
spring.datasource.testOnReturn=true
## 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20


###### ============================== MQ配置========================== #####
# 连接地址
spring.activemq.broker-url=tcp://192.168.1.106:61616

# 在考虑结束之前等待的时间
#spring.activemq.close-timeout=15s

# 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
spring.activemq.in-memory=true

# 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
spring.activemq.non-blocking-redelivery=false

# 等待消息发送响应的时间。设置为0等待永远。
spring.activemq.send-timeout=0

#默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置
spring.jms.pub-sub-domain=true

#账号
spring.activemq.user=admin

# 密码
spring.activemq.password=admin

# 是否信任所有包
#spring.activemq.packages.trust-all=

# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=

# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
spring.activemq.pool.block-if-full=true

# 如果池仍然满，则在抛出异常前阻塞时间。
spring.activemq.pool.block-if-full-timeout=-1ms

# 是否在启动时创建连接。可以在启动时用于加热池。 ------过时
#spring.activemq.pool.create-connection-on-startup=true

# 是否用Pooledconnectionfactory代替普通的ConnectionFactory。
spring.activemq.pool.enabled=false

# 连接过期超时。------过时
#spring.activemq.pool.expiry-timeout=0ms

# 连接空闲超时
spring.activemq.pool.idle-timeout=30s

# 连接池最大连接数
spring.activemq.pool.max-connections=3

# 每个连接的有效会话的最大数目。 ------过时
#spring.activemq.pool.maximum-active-session-per-connection=500

# 当有"JMSException"时尝试重新连接  ------过时
#spring.activemq.pool.reconnect-on-exception=true

# 在空闲连接清除线程之间运行的时间。当为负数时，没有空闲连接驱逐线程运行。
spring.activemq.pool.time-between-expiration-check=-1ms

# 是否只使用一个MessageProducer
spring.activemq.pool.use-anonymous-producers=true







